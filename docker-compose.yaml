networks:
  loki: {}

volumes:
  minio-data: {}
  grafana-data: {}

services:
  loki:
    image: grafana/loki:latest
    restart: unless-stopped
    command: -config.file=/etc/loki/config.yaml -config.expand-env=true
    environment:
      LOKI_PATH_PREFIX: ${LOKI_PATH_PREFIX}
      LOKI_S3_DATA_BUCKET_NAME: ${LOKI_S3_DATA_BUCKET_NAME}
      LOKI_S3_RULER_BUCKET_NAME: ${LOKI_S3_RULER_BUCKET_NAME}
      LOKI_COMPACTOR_WORKING_DIR: ${LOKI_COMPACTOR_WORKING_DIR}
      LOKI_COMPACTOR_RETENTION_ENABLED: ${LOKI_COMPACTOR_RETENTION_ENABLED}
      LOKI_COMPACTOR_RETENTION_PERIOD: ${LOKI_COMPACTOR_RETENTION_PERIOD}
      MINIO_USER: ${MINIO_USER}
      MINIO_PASSWORD: ${MINIO_PASSWORD}
    volumes:
      - ./loki-config.yaml:/etc/loki/config.yaml:ro
    depends_on:
      - minio
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - loki

  alloy:
    image: grafana/alloy:latest
    restart: unless-stopped
    volumes:
      - ./alloy-syslog-config.alloy:/etc/alloy/config.alloy:ro
    depends_on:
      - loki
    command: run --server.http.listen-addr=0.0.0.0:12345 --storage.path=/var/lib/alloy/data /etc/alloy/config.alloy
    ports:
      - "514:514/udp"
    networks:
      - loki

  minio:
    image: minio/minio:latest
    restart: unless-stopped
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data && \
        mkdir -p /data/loki-ruler && \
        minio server /data
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
      MINIO_PROMETHEUS_AUTH_TYPE: public
      MINIO_UPDATE: off
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 15s
      timeout: 20s
      retries: 5
    networks:
      - loki

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - loki
